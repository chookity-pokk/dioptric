# -*- coding: utf-8 -*-
"""Presentation round unit tests

Created on March 7th, 2023

@author: mccambria
"""

import utils.tool_belt as tool_belt

vals = [
    2.869549,
    2.869409,
    2.869265,
    2.869323,
    2.869320,
    2.869514,
    2.869471,
    2.869382,
    2.869566,
    2.869293,
    2.869116,
    2.869526,
    2.869619,
    2.869388,
    2.869451,
    2.869500,
    2.870178,
    2.869463,
    2.870033,
    2.869479,
    2.869472,
    2.869201,
    2.869634,
    2.869352,
    2.869265,
    2.868786,
    2.869506,
    2.869398,
    2.869324,
    2.869297,
    2.868402,
    2.869612,
    2.868951,
    2.869346,
    2.869729,
    2.869555,
    2.869349,
    2.869200,
    2.869306,
    2.869191,
    2.869638,
    2.869301,
    2.869307,
    2.869410,
    2.869455,
    2.869586,
    2.869742,
    2.86961,
    2.869567,
    2.869645,
    0.0170,
    0.0350,
    0.0160,
    0.0190,
    -0.0200,
    0.0370,
    0.2350,
    0.9970,
    2.640,
    2.7160,
    3.956,
    4.035,
    6.189,
    8.346,
    11.422,
    13.325,
    14.499,
    19.118,
    22.308,
    28.527,
    26.886,
    35.411,
    44.612,
    54.085,
    59.679,
    59.000,
    49.682,
    51.233,
    64.576,
    59.866,
    72.913,
    86.532,
    77.288,
    96.225,
    101.473,
    106.117,
    75.817,
    108.896,
    114.242,
    131.768,
    163.254,
    138.010,
    164.973,
    159.794,
    176.932,
    179.144,
    212.799,
    242.748,
    223.225,
    254.336,
    265.881,
    262.434,
    304.223,
    337.283,
    317.100,
    350.667,
    386.561,
    0.0500,
    0.0190,
    0.3350,
    0.0870,
    0.2380,
    0.4670,
    1.0500,
    3.3850,
    6.951,
    9.0630,
    10.278,
    12.074,
    16.555,
    20.893,
    23.206,
    29.997,
    38.706,
    51.673,
    57.347,
    71.508,
    73.389,
    78.518,
    90.758,
    105.448,
    128.497,
    117.000,
    118.415,
    131.149,
    122.848,
    131.573,
    149.681,
    130.023,
    157.085,
    159.474,
    195.446,
    222.296,
    194.128,
    178.116,
    227.258,
    251.496,
    265.95,
    278.923,
    263.255,
    339.588,
    289.534,
    354.997,
    369.784,
    363.90,
    486.39,
    409.110,
    516.550,
    432.889,
    516.874,
    524.028,
    580.060,
    499.506,
    587.542,
]
errs = [
    0.000122,
    0.000151,
    0.000122,
    0.000126,
    0.000136,
    0.000125,
    0.000162,
    0.000131,
    0.000129,
    0.000137,
    0.00015,
    0.000187,
    0.000156,
    0.00015,
    0.000158,
    0.000353,
    0.000354,
    0.000323,
    0.00036,
    0.000379,
    0.000132,
    0.000188,
    0.00014,
    0.000131,
    0.000138,
    0.00026,
    0.000301,
    0.000262,
    0.000256,
    0.000249,
    0.000332,
    0.000436,
    0.00035,
    0.000332,
    0.000363,
    0.000119,
    0.000153,
    0.000116,
    0.000121,
    0.000133,
    0.000246,
    0.000309,
    0.000244,
    0.000229,
    0.000231,
    0.000119,
    0.000148,
    0.000123,
    0.000117,
    0.000129,
    0.0090,
    0.0240,
    0.0060,
    0.0220,
    0.0100,
    0.0200,
    0.0670,
    0.0940,
    0.160,
    0.2260,
    0.257,
    0.292,
    0.248,
    0.428,
    0.525,
    1.262,
    0.650,
    0.957,
    1.030,
    1.271,
    2.391,
    1.676,
    2.133,
    2.725,
    2.732,
    2.000,
    10.809,
    5.328,
    5.095,
    2.329,
    3.134,
    4.866,
    3.368,
    4.438,
    4.985,
    8.574,
    12.243,
    6.657,
    4.935,
    5.577,
    38.404,
    6.479,
    7.450,
    13.072,
    16.102,
    7.287,
    9.937,
    9.689,
    19.486,
    10.878,
    30.227,
    11.027,
    13.118,
    14.775,
    27.377,
    29.768,
    28.557,
    0.0250,
    0.0340,
    0.0780,
    0.0600,
    0.0930,
    0.2110,
    0.3170,
    0.4040,
    0.647,
    0.9650,
    0.817,
    0.931,
    0.838,
    1.258,
    1.595,
    3.847,
    2.379,
    3.186,
    3.558,
    4.317,
    7.420,
    5.350,
    6.587,
    7.723,
    7.319,
    5.000,
    38.540,
    15.153,
    12.835,
    6.972,
    9.767,
    12.416,
    10.170,
    11.393,
    13.042,
    23.377,
    40.896,
    18.780,
    14.960,
    17.240,
    89.586,
    20.358,
    19.790,
    38.509,
    40.032,
    22.138,
    28.486,
    24.976,
    53.821,
    27.557,
    84.127,
    29.460,
    32.906,
    33.658,
    74.006,
    68.989,
    64.812,
]

expected_results = [
    "2.86955(12)",
    "2.86941(15)",
    "2.86926(12)",
    "2.86932(13)",
    "2.86932(14)",
    "2.86951(13)",
    "2.86947(16)",
    "2.86938(13)",
    "2.86957(13)",
    "2.86929(14)",
    "2.86912(15)",
    "2.86953(19)",
    "2.86962(16)",
    "2.86939(15)",
    "2.86945(16)",
    "2.8695(4)",
    "2.8702(4)",
    "2.8695(3)",
    "2.8700(4)",
    "2.8695(4)",
    "2.86947(13)",
    "2.86920(19)",
    "2.86963(14)",
    "2.86935(13)",
    "2.86926(14)",
    "2.8688(3)",
    "2.8695(3)",
    "2.8694(3)",
    "2.8693(3)",
    "2.8693(2)",
    "2.8684(3)",
    "2.8696(4)",
    "2.8690(3)",
    "2.8693(3)",
    "2.8697(4)",
    "2.86956(12)",
    "2.86935(15)",
    "2.86920(12)",
    "2.86931(12)",
    "2.86919(13)",
    "2.8696(2)",
    "2.8693(3)",
    "2.8693(2)",
    "2.8694(2)",
    "2.8695(2)",
    "2.86959(12)",
    "2.86974(15)",
    "2.86961(12)",
    "2.86957(12)",
    "2.86964(13)",
    "0.017(9)",
    "0.04(2)",
    "0.016(6)",
    "0.02(2)",
    "-0.02(1)",
    "0.04(2)",
    "0.23(7)",
    "1.00(9)",
    "2.64(16)",
    "2.7(2)",
    "4.0(3)",
    "4.0(3)",
    "6.2(2)",
    "8.3(4)",
    "11.4(5)",
    "13.3(13)",
    "14.5(7)",
    "19.1(10)",
    "22.3(10)",
    "28.5(13)",
    "27(2)",
    "35.4(17)",
    "45(2)",
    "54(3)",
    "60(3)",
    "59(2)",
    None,
    "51(5)",
    "65(5)",
    "60(2)",
    "73(3)",
    "87(5)",
    "77(3)",
    "96(4)",
    "101(5)",
    "106(9)",
    None,
    "109(7)",
    "114(5)",
    "132(6)",
    None,
    "138(6)",
    "165(7)",
    None,
    None,
    "179(7)",
    "213(10)",
    "243(10)",
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    "0.05(3)",
    "0.02(3)",
    "0.34(8)",
    "0.09(6)",
    "0.24(9)",
    "0.5(2)",
    "1.1(3)",
    "3.4(4)",
    "7.0(6)",
    "9.1(10)",
    "10.3(8)",
    "12.1(9)",
    "16.6(8)",
    "20.9(13)",
    "23.2(16)",
    "30(4)",
    "39(2)",
    "52(3)",
    "57(4)",
    "72(4)",
    "73(7)",
    "79(5)",
    "91(7)",
    "105(8)",
    "128(7)",
    "117(5)",
    None,
    None,
    None,
    "132(7)",
    "150(10)",
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
    None,
]

# expected_results = []
for ind in range(len(vals)):
    # for ind in [86]:
    val = vals[ind]
    err = errs[ind]
    # res = input(f"{val}, {err}\n")
    # if res == "":
    #     res = None
    # expected_results.append(res)
    exp = expected_results[ind]
    # act = tool_belt.round_for_print(val, err)
    act = tool_belt.round_for_print_sci_latex(val, err)
    print(val)
    print(err)
    print(act)
    print()
    # if exp != act:
    #     test = 0
# print(expected_results)
